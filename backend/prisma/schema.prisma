generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Student {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  username    String        @unique
  name        String
  email       String        @unique
  password    String
  avatar      String        @default("https://profilepicture-and-backgroundimage.s3.ap-south-1.amazonaws.com/default-user.png")
  background  String        @default("https://profilepicture-and-backgroundimage.s3.ap-south-1.amazonaws.com/deafult-background.jpg")
  quizAttempt QuizAttempt[]
  leaderboard Leaderbaord[]
}

model TestModule {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String          @unique
  questions     Question[]
  ActiveRoom    ActiveRoom[]
  PastRoom      PastRoom[]
  ScheduledRoom ScheduledRoom[]
}

model Question {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  text         String
  options      Option[]
  correct      String
  testModule   TestModule @relation(fields: [testModuleId], references: [id])
  testModuleId String     @db.ObjectId
}

model Option {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  text       String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @db.ObjectId
}

model ActiveRoom {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  roomName     String        @unique
  roomCode     String        @unique
  testModule   TestModule    @relation(fields: [testModuleId], references: [id])
  testModuleId String        @db.ObjectId
  startTime    DateTime
  endTime      DateTime
  createdAt    DateTime      @default(now())
}

model PastRoom {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  roomName     String        @unique
  roomCode     String        @unique
  testModule   TestModule    @relation(fields: [testModuleId], references: [id])
  testModuleId String        @db.ObjectId
  startTime    DateTime
  endTime      DateTime
  quizAttempts QuizAttempt[]
}

model ScheduledRoom {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  roomName     String     @unique
  roomCode     String     @unique
  testModuleId String     @db.ObjectId
  testModule   TestModule @relation(fields: [testModuleId], references: [id])
  startTime    DateTime
  endTime      DateTime
  createdAt    DateTime   @default(now())
}

model QuizAttempt {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  student    Student   @relation(fields: [studentId], references: [id])
  studentId  String    @db.ObjectId
  roomName   String
  pastRoom   PastRoom? @relation(fields: [roomName], references: [roomName])
  answers    Json
  score      Int
  finishedAt DateTime?
}

model Leaderbaord {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  roomName  String
  student   Student     @relation(fields: [studentId], references: [id])
  studentId String      @db.ObjectId
  score     Int
  rank      Int

  @@unique([studentId, roomName])
}
