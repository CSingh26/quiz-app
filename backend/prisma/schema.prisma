generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Student {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  name     String
  password String
  quizAttempt QuizAttempt[]
  leaderboard Leaderbaord[]
}

model TestModule {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String       @unique
  questions  Question[]
  ActiveRoom ActiveRoom[]
  PastRoom   PastRoom[]
  ScheduledRoom ScheduledRoom[]
}

model Question {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  text         String
  options      Option[]
  correct      String
  testModule   TestModule @relation(fields: [testModuleId], references: [id])
  testModuleId String     @db.ObjectId
}

model Option {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  text       String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @db.ObjectId
}

model ActiveRoom {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  roomName     String
  roomCode String @unique
  testModule   TestModule @relation(fields: [testModuleId], references: [id])
  testModuleId String     @db.ObjectId
  startTime    DateTime
  endTime      DateTime
  leaderboard Leaderbaord[]
}

model PastRoom {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  roomName     String
  roomCode String @unique
  testModule   TestModule @relation(fields: [testModuleId], references: [id])
  testModuleId String     @db.ObjectId
  startTime    DateTime
  endTime      DateTime
}

model ScheduledRoom {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  roomName     String
  roomCode     String      @unique
  testModuleId String      @db.ObjectId
  testModule   TestModule  @relation(fields: [testModuleId], references: [id])
  startTime    DateTime
  endTime      DateTime
  createdAt    DateTime    @default(now())
}

model QuizAttempt {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  student    Student    @relation(fields: [studentId], references: [id])
  studentId  String     @db.ObjectId
  answers    Json
  score      Int
  finishedAt DateTime?
}

model Leaderbaord {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  room       ActiveRoom?  @relation(fields: [roomId], references: [id])
  roomId     String?      @db.ObjectId
  student    Student     @relation(fields: [studentId], references: [id])
  studentId  String      @db.ObjectId
  score      Int
  rank       Int

  @@unique([studentId, roomId])
}